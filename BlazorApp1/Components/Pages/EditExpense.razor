@page "/expenses/{expenseId:int}"
@inject NavigationManager Navigation
@inject Services.ExpenseService ExpenseService
@inject Services.CategoryService CategoryService
@using BlazorApp1.Data.Models
@using Microsoft.AspNetCore.Components.Forms
@rendermode InteractiveServer

<h3>Edit Expense</h3>

<EditForm Model="expense" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label for="title">Title</label>
        <InputText id="title" class="form-control" @bind-Value="expense.Title" />
    </div>
    <div class="form-group">
        <label for="date">Date</label>
        <InputDate id="date" class="form-control" @bind-Value="expense.Date" />
    </div>
    <div class="form-group">
        <label for="amount">Amount</label>
        <InputNumber id="amount" class="form-control" @bind-Value="expense.Amount" />
    </div>
    <div class="form-group">
        <label for="planned">Planned</label>
        <InputCheckbox id="planned" class="form-check-input" @bind-Value="expense.Planned" />
    </div>
    <div class="form-group">
        <label for="category">Category</label>
        <InputSelect id="category" class="form-control" @bind-Value="expense.CategoryId">
            <option value="">Select Category</option>
            @foreach (var category in categories)
            {
                <option value="@category.Id">@category.Name</option>
            }
        </InputSelect>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    [Parameter]
    public int expenseId { get; set; }

    private Expense expense = new Expense();
    private List<Category> categories = new List<Category>();

    protected override async Task OnInitializedAsync()
    {
        categories = await CategoryService.GetCategoriesAsync();
        expense = await ExpenseService.GetExpenseByIdAsync(expenseId);

        if (expense == null)
        {
            // Redirect to expenses page if the expense is not found
            Navigation.NavigateTo("/expenses");
        }
    }

    private async Task HandleValidSubmit()
    {
        await ExpenseService.UpdateExpenseAsync(expense);
        Navigation.NavigateTo("/expenses");
    }
}
